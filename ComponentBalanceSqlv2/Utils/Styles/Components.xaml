<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:styles="clr-namespace:ComponentBalanceSqlv2.Utils.Styles"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">

    <!--Стиль LongUpDown-->
    <Style x:Key="LongUpDownStyle" TargetType="{x:Type xctk:LongUpDown}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="AllowSpin" Value="False"/>
        <Setter Property="Margin" Value="1,0"/>
        <Setter Property="ShowButtonSpinner" Value="False"/>
        <Setter Property="Minimum" Value="0"/>
        <Setter Property="DefaultValue" Value="0"/>
        <Setter Property="DisplayDefaultValueOnEmptyText" Value="True"/>
    </Style>

    <!--Стиль DecimalUpDown-->
    <Style x:Key="DecimalUpDownStyle" TargetType="{x:Type xctk:DecimalUpDown}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="AllowSpin" Value="False"/>
        <Setter Property="ShowButtonSpinner" Value="False"/>
        <Setter Property="FormatString" Value="F3"/>
        <Setter Property="DefaultValue" Value="0.00"/>
        <Setter Property="DisplayDefaultValueOnEmptyText" Value="True"/>
    </Style>

    <!--Стиль ComboBox-->
    <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="2.5"></Setter>
    </Style>

    <!--Стиль RadioButton-->
    <Style x:Key="RadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{x:Static styles:Visual.ForeColor2_PapayaWhip}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Margin" Value="2.5"/>
    </Style>
    <!--Стиль CheckBox-->
    <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>

    <!-- Увеличенный размер календаря компонента DatePicker -->
    <Style x:Key="StyleBigCalendar" TargetType="{x:Type Calendar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Calendar}">
                    <Viewbox Height="250" Width="250">
                        <CalendarItem x:Name="PART_CalendarItem" Background="{TemplateBinding Background}" 
                                      BorderThickness="{TemplateBinding BorderThickness}" 
                                      BorderBrush="{TemplateBinding BorderBrush}" />
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль DataGrid -->
    <Style x:Key="GridStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="HorizontalGridLinesBrush" Value="{x:Static styles:Visual.LineBorderColor1_BigStone}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{x:Static styles:Visual.LineBorderColor1_BigStone}"/>
        <Setter Property="Foreground" Value="{x:Static styles:Visual.ForeColor1_BigStone}"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="RowHeaderWidth" Value="0"/>
        <Setter Property="Margin" Value="0 2.5 0 0"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
    </Style>

    <Style x:Key="SearchDataGridStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="HorizontalGridLinesBrush" Value="{x:Static styles:Visual.LineBorderColor1_BigStone}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{x:Static styles:Visual.LineBorderColor1_BigStone}"/>
        <Setter Property="BorderBrush" Value="{x:Static styles:Visual.LineBorderColor3_SanJuan}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Background" Value="{x:Static styles:Visual.BackColor8_DiSerria}"/>
        <Setter Property="Foreground" Value="{x:Static styles:Visual.ForeColor1_BigStone}"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="HeadersVisibility" Value="None"/>
        <Setter Property="AlternationCount" Value="2"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="Margin" Value="5 0 5 2.5"/>
        <Setter Property="RowHeight" Value="30"/>
        <Setter Property="Height" Value="120"/>
        <Setter Property="Cursor" Value="Hand"/>
    </Style>

    <!-- Стиль строки DataGrid -->
    <!-- Выделение строки при наведении мышкой и альтернативный цвет строк -->
    <Style x:Key="DataGridRowStyle" TargetType="DataGridRow">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="IsSelected" Value="True"/>
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                <Setter Property="Background" Value="{x:Static styles:Visual.BackColor1_AthensGray}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Стиль ячеек DataGrid -->
    <Style x:Key="CellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Style.Triggers>
            <Trigger  Property="IsSelected" Value="true">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ElementStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="3"/>
    </Style>

    <!--Стиль Button главной страницы -->
    <Style x:Key="MainWindowButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="0 0 0 5"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Cursor" Value="Hand"/>
    </Style>

    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Padding" Value="2.5"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{Binding Source={x:Static styles:Visual.LineBorderColor4_BlueBayoux}}"/>
        <Setter Property="Cursor" Value="Hand"/>
    </Style>

    <Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="2 0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="{Binding Source={x:Static styles:Visual.LineBorderColor4_BlueBayoux}}"/>
        <Setter Property="Cursor" Value="Hand"/>
    </Style>

    <ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type Button}">
        <Border Name="Border" 
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}">
            <ContentPresenter Content="{TemplateBinding Content}" 
                              Margin="{TemplateBinding Padding}"
                              ContentTemplate="{TemplateBinding ContentTemplate}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsFocused" Value="True">
                <Setter TargetName="Border" 
                        Property="Background"  
                        Value="{Binding Source={x:Static styles:Visual.LineBorderColor5_Sail}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="2.5"/>
        <Setter Property="Margin" Value="2.5 5 2.5 2.5"/>
    </Style>
</ResourceDictionary>